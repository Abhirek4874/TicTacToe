<head>
    <script  src="http://code.jquery.com/jquery-1.9.1.min.js" ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/js/all.min.js"></script>
</head>
<h1 id="<%= player1name %>"><%= player1name %> has selected <%= player1sign %></h1>
<h1 id="<%= player2name %>"><%= player2name %> has selected <%= player2sign %></h1>
<h2 id="currentTurn"></h2>
<p id="player1" hidden><%= player1sign %></p>
<p id="player2" hidden><%= player2sign %></p>
<p id="radioPlayer" hidden><%= radioPlayer %></p>
<p id="radioCpu" hidden><%= radioCpu %></p>
</div>
<div class="grid-container">
<div class="grid-item" id="grid-item1"></div>
<div class="grid-item" id="grid-item2"></div>
<div class="grid-item" id="grid-item3"></div>  
<div class="grid-item" id="grid-item4"></div>
<div class="grid-item" id="grid-item5"></div>
<div class="grid-item" id="grid-item6"></div>  
<div class="grid-item" id="grid-item7"></div>
<div class="grid-item" id="grid-item8"></div>
<div class="grid-item" id="grid-item9"></i></div>  
</div>
</div>
<button style="color: black;" onclick="leaveGame()">Leave Game</button>
<div id="overlay">
<p id="gameEnd"></p>
<button onclick="restart()">Restart</button>
</div>
<style>

    body{
        background: white;

    }



    @-webkit-keyframes wawes {
    from {
      -webkit-transform: rotate(0);
    }
    to {
      -webkit-transform: rotate(360deg);
    }
  }
  @-moz-keyframes wawes {
    from {
      -moz-transform: rotate(0);
    }
    to {
      -moz-transform: rotate(360deg);
    }
  }
  @keyframes wawes {
    from {
      -webkit-transform: rotate(0);
      -moz-transform: rotate(0);
      -ms-transform: rotate(0);
      -o-transform: rotate(0);
      transform: rotate(0);
    }
    to {
      -webkit-transform: rotate(360deg);
      -moz-transform: rotate(360deg);
      -ms-transform: rotate(360deg);
      -o-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }

    #overlay {
  position: fixed;
  display: none;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0,0.8);
  z-index: 2;
  cursor: pointer;
}
    h1,h2{
        text-align: center;
        color: black;
    }

    .grid-container {
        height: 500px;
    display: grid;
    margin-top: 7%;
    grid-template-columns: repeat(3, 134px);
    grid-template-rows: repeat(4, 130px);
    justify-content: center;
    }

    .grid-item {
    background-color: #78bec5;
    color: black;
    padding: 20px;
    border-radius: 33px;
    margin: 4px;
    box-shadow: 2px 2px 4px #3d4250;
    font-size: 68px;
    text-align: center;
    justify-content: center;
    }

    .grid-disabled {
    background-color: #78bec5;
    color: black;
    padding: 20px;
    border-radius: 33px;
    margin: 4px;
    box-shadow: 2px 2px 4px #3d4250;
    font-size: 90px;
    text-align: center;
    justify-content: center;
    }

    .grid-item:hover {
    background-color: #3d4250;
    box-shadow: 2px 2px 4px #000000;
  }

    button{
    background-color: rgba(0,0,0,-2.1);
			color: white;
			border:0;
			border-radius: 15px;
			display: block;
			margin: 0px auto; 
			padding: 0px 45px;
			width: 60%;
            font-family: sans-serif;
			font-size: 70px;
			font-weight: bold;
			cursor: pointer;
			opacity: 1;
			visibility: visible;
			-webkit-transition: all .3s ease;
  }
  button:hover{
    transition: all .3s ease;
	background-color: rgba(0,0,0,0.8);
  }

  #gameEnd{
      color: white;
      font-size: 50px;
      text-align: center;
      font-weight: bold;
      opacity: 1;
      font-family: sans-serif;
      margin: 187px;
  }

    </style>
    

<script>

function on() {
  document.getElementById("overlay").style.display = "block";
}
function restart() {
    window.location.href = "/";
}

const leaveGame = () => {
    window.location.href = "/";
};

        const player1choice = document.getElementById('player1').innerText;
        const player2choice = document.getElementById('player2').innerText;
        const player1Name = document.getElementsByTagName('h1').item(0).id;
        const player2Name = document.getElementsByTagName('h1').item(1).id;
        
        let playerChoices = [player1choice,player2choice];
        const playerChoice = [player1choice,player2choice];
        let playerNames = [player1Name,player2Name];
        let totalMoves = 0;
        let currentChoice = player1choice;
        let currentPlayerTurn = player1Name;
        let recursiveCalls = 0;
        
        let temp = document.getElementsByClassName("grid-item");
        const radioPlayer = document.getElementById('radioPlayer').innerText;
        const radioCpu = document.getElementById('radioCpu').innerText;

        if(radioPlayer != '' && radioCpu == ''){
            modePlayer();
        }else{
            modeCpu();
        }

        //CPU mode
         function modeCpu(){

            const cpuChoice = document.getElementById('player2').innerText;
            const playerChoice = document.getElementById('player1').innerText;;
            const player1Name = document.getElementsByTagName('h1').item(0).id;
            let playerNames = [player1Name,'CPU'];
            const generatedGridIds = [];
            let userMoveCount = 0;
            let currentTurn = 'Player';

            for( let i = 0;i<temp.length; i++  ){

         temp[i].addEventListener("click", function(){
            totalMoves++;
            const gridId = this.id;

            let gridStyle = document.getElementById(gridId).getAttribute('style');
            if(gridStyle == null){
                currentPlayerTurn = 'Cpu'; 
        document.getElementById("currentTurn").innerText = `Next Turn : ${currentPlayerTurn}`;
            document.getElementById(gridId).innerText = playerChoice;
            document.getElementById(gridId).style.backgroundColor = '#F96A51';
            document.getElementById(gridId).style.color = 'white'; 
            if(recursiveCalls < 200){
                cpuMoves(gridId);
            }
            
            checkWinner('Player', playerChoice);  
            }
            
        });        

    };
    function cpuMoves(clikedId){
        recursiveCalls++
        userMoveCount++;
    const minimum = 1;
            const maximum = 9;
            let randomnumber = Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;
            console.log(`random number = ${randomnumber}`)

            arrGrids = document.getElementsByClassName('grid-item');

    if(!generatedGridIds.includes(randomnumber)){
        console.log("insid generated id if");

        generatedGridIds.push(randomnumber);
        let randomGridId = `grid-item${randomnumber}`;
        if(clikedId == "grid-item1" || clikedId == "grid-item3" || clikedId == "grid-item7" || clikedId == "grid-item9"){
            randomGridId = `grid-item5`;
        }

if(clikedId != null){
    if(clikedId == "grid-item1"){
        if(nextGridGenerator(2,3) != ""){
            randomGridId = nextGridGenerator(2,3);
        }else if(nextGridGenerator(5,9) != ""){
            randomGridId = nextGridGenerator(5,9);
        }else if(nextGridGenerator(4,7) != ""){
            randomGridId = nextGridGenerator(4,7);
        }
    }

    if(clikedId == "grid-item2"){
        if(nextGridGenerator(1,3) != ""){
            randomGridId = nextGridGenerator(1,3);
        }else if(nextGridGenerator(5,8) != ""){
            randomGridId = nextGridGenerator(5,8);
        }
        
    }
    if(clikedId == "grid-item3"){
        if(nextGridGenerator(1,2) != ""){
            randomGridId = nextGridGenerator(1,2);
        }else if(nextGridGenerator(5,7) != ""){
            randomGridId = nextGridGenerator(5,7);
        }else if(nextGridGenerator(6,9) != ""){
            randomGridId = nextGridGenerator(6,9);
        }
        
    }
    if(clikedId == "grid-item4"){
        if(nextGridGenerator(5,6) != ""){
            randomGridId = nextGridGenerator(5,6);
        }else if(nextGridGenerator(1,7) != ""){
            randomGridId = nextGridGenerator(1,7);
        }
       
    }
    if(clikedId == "grid-item5"){
        if(nextGridGenerator(4,6) != ""){
            randomGridId = nextGridGenerator(4,6);
        }else if(nextGridGenerator(3,7) != ""){
            randomGridId = nextGridGenerator(3,7);
        }else if(nextGridGenerator(1,9) != ""){
            randomGridId = nextGridGenerator(1,9);
        }else if(nextGridGenerator(2,8) != ""){
            randomGridId = nextGridGenerator(2,8);
        }
        
    }
    if(clikedId == "grid-item6"){
        if(nextGridGenerator(4,5) != ""){
            randomGridId = nextGridGenerator(4,5);
        }else if(nextGridGenerator(3,9) != ""){
            randomGridId = nextGridGenerator(3,9);
        }
        
    }
    if(clikedId == "grid-item7"){
        if(nextGridGenerator(8,9) != ""){
            randomGridId = nextGridGenerator(8,9);
        }else if(nextGridGenerator(5,3) != ""){
            randomGridId = nextGridGenerator(5,3);
        }else if(nextGridGenerator(4,1) != ""){
            randomGridId = nextGridGenerator(4,1);
        }
        
    }
    if(clikedId == "grid-item8"){
        if(nextGridGenerator(7,9) != ""){
            randomGridId = nextGridGenerator(7,9);
        }else if(nextGridGenerator(2,5) != ""){
            randomGridId = nextGridGenerator(2,5);
        }
      
    }
    if(clikedId == "grid-item9"){
        if(nextGridGenerator(7,8) != ""){
            randomGridId = nextGridGenerator(7,8);
        }else if(nextGridGenerator(5,1) != ""){
            randomGridId = nextGridGenerator(5,1);
        }else if(nextGridGenerator(3,6) != ""){
            randomGridId = nextGridGenerator(3,6);
        }
        
    }

}

        let gridStyle = document.getElementById(randomGridId).getAttribute('style');
        if(gridStyle == null){
            console.log("inside grid null");
            currentPlayerTurn = 'Player';
            setTimeout(()=>{
            document.getElementById(randomGridId).innerText = cpuChoice;
            document.getElementById(randomGridId).style.backgroundColor = '#ecaf4f';
            document.getElementById(randomGridId).style.color = 'white';
            document.getElementById("currentTurn").innerText = `Next Turn : ${currentPlayerTurn}`;
            totalMoves++
            checkWinner('Cpu',cpuChoice);
        },1000);
        }
        else{
            console.log("inside else");
            if(recursiveCalls < 200){
                cpuMoves();
            }

        }
   
    }else{
        console.log("inside big else");
        if(recursiveCalls < 200){
                cpuMoves();
            }
    }
}

        }           
                
        //Two Player mode
        function modePlayer(){

        for( let i = 0;i< temp.length; i++  ){
        temp[i].addEventListener("click", function(){

        //$('.grid-item').click( function() {
        const gridId = this.id;
        let gridStyle = document.getElementById(gridId).getAttribute('style');
 

        if(gridStyle == null){
            totalMoves++;

        if(currentChoice === playerChoice[0]){
        document.getElementById(gridId).innerHTML = '<i class="fa fa-times" aria-hidden="true"></i>';
        document.getElementById(gridId).innerText = currentChoice;
        document.getElementById(gridId).style.backgroundColor = '#F96A51';
        document.getElementById(gridId).style.color = 'white';

        checkWinner(player1Name, currentChoice);
    }

    if(currentChoice === playerChoice[1]){
        document.getElementById(gridId).innerHTML = '<i class="fa fa-times" aria-hidden="true"></i>';
        document.getElementById(gridId).innerText = currentChoice;
        document.getElementById(gridId).style.backgroundColor = '#ecaf4f';
        document.getElementById(gridId).style.color = 'white';

        checkWinner(player2Name, currentChoice);
    }

            
    playerChoices.reverse();
        currentChoice = playerChoices[0];

        playerNames.reverse();
        currentPlayerTurn = playerNames[0];
  
        document.getElementById("currentTurn").innerText = `Next Turn : ${currentPlayerTurn}`;
}

        
    } );
}
        }


        //check Winner
        function checkWinner(currentPlayer, currentChoice){
            let boolWin = false;

        //checking if the grids contain i class
        const grid1 = document.getElementById('grid-item1').innerText;
        const grid2 = document.getElementById('grid-item2').innerText;
        const grid3 = document.getElementById('grid-item3').innerText;
        const grid4 = document.getElementById('grid-item4').innerText;
        const grid5 = document.getElementById('grid-item5').innerText;
        const grid6 = document.getElementById('grid-item6').innerText;
        const grid7 = document.getElementById('grid-item7').innerText;
        const grid8 = document.getElementById('grid-item8').innerText;
        const grid9 = document.getElementById('grid-item9').innerText;


        if( grid1 === currentChoice && grid5 === currentChoice && grid9 === currentChoice ){
            boolWin = true;
        }
        else if( grid3 === currentChoice && grid5 === currentChoice && grid7 === currentChoice ){
            boolWin = true;
        }
        else if( grid1 === currentChoice && grid2 === currentChoice && grid3 === currentChoice ){
            boolWin = true;
        }
        else if( grid4 === currentChoice && grid5 === currentChoice && grid6 === currentChoice ){
            boolWin = true;
        }
        else if( grid7 === currentChoice && grid8 === currentChoice && grid9 === currentChoice ){
            boolWin = true;
        }
        else if( grid1 === currentChoice && grid4 === currentChoice && grid7 === currentChoice ){
            boolWin = true;
        }
        else if( grid2 === currentChoice && grid5 === currentChoice && grid8 === currentChoice ){
            boolWin = true;
        }
        else if( grid3 === currentChoice && grid6 === currentChoice && grid9 === currentChoice ){
            boolWin = true;
        }

        if( boolWin == true ){
            //setTimeout(function(){alert(`${currentPlayer} Won, Game Over!`);} , 100);  
            //setTimeout(function(){window.location.href = "/";} , 1000);   
            document.getElementById('gameEnd').innerText = `${currentPlayer} Won, Game Over!`;
            setTimeout(function(){on();} , 100);  

        }else if(totalMoves > 8 && boolWin == false){
            //setTimeout(function(){alert(`ame Tie! GPlease Start a new game`);} , 100);  
            //setTimeout(function(){window.location.href = "/";} , 1000);   
            document.getElementById('gameEnd').innerText = `Tie, Please start a new game!`;
            setTimeout(function(){on();} , 100);  
        }
         
         }

       function nextGridGenerator(x,y){
        var playerSelection = document.getElementById('player1').innerText;
           var nextGridId = "";
            gridX = document.getElementById(`grid-item${x}`).innerText;
            gridY = document.getElementById(`grid-item${y}`).innerText;


        if(gridX == playerSelection){
            nextGridId = `grid-item${y}`;
        }else if(gridY == playerSelection){
            nextGridId = `grid-item${x}`;
        }
console.log(`returned grdi = ${nextGridId}`);
        return nextGridId;  

       }

</script>